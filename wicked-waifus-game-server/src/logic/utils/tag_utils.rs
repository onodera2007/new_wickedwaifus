use std::collections::HashMap;
use std::sync::OnceLock;
use unreal_niggery_rs::fnv::ue_gas_fnv_hash;
use widestring::U16CString;

// TODO: Make it nicer
static TAG_ID_2_UGLY_TAG_ID_MAP: OnceLock<HashMap<i32, i32>> = OnceLock::new();

fn get_tag_ugly_map() -> &'static HashMap<i32, i32> {
    TAG_ID_2_UGLY_TAG_ID_MAP.get_or_init(|| {
        let mut map = HashMap::new();
        map.insert(665060676, -689911122);
        map.insert(13355129, -69562997);
        map.insert(49156645, 1840856189);
        map.insert(370674185, -1276475545);
        map.insert(-525201732, -1152048753);
        map.insert(2027348094, 1790413286);
        map.insert(961074105, 1260157389);
        map.insert(-2099843012, -1826297010);
        map.insert(1397292199, -1568691815);
        map.insert(774686413, -113743209);
        map.insert(1734115005, -271538568);
        map.insert(-1288554675, 2130437044);
        map.insert(470725697, -486371353);
        map.insert(1135424583, -1613060918);
        map.insert(-1756432600, -1010422269);
        map.insert(424820279, -775801180);
        map.insert(393181306, 1405023713);
        map.insert(425393345, 1374049690);
        map.insert(392103684, 1407752023);
        map.insert(-580925275, 194372208);
        map.insert(-630985694, 1927555813);
        map.insert(-1302760285, -156068301);
        map.insert(1819813309, 14053290);
        map.insert(-629833554, -406038058);
        map.insert(1518081744, 47342951);
        map.insert(1217118505, -622084499);
        map.insert(1819282155, 14626356);
        map.insert(-474393396, -1675110648);
        map.insert(1785992494, 52868081);
        map.insert(-249709009, -645909457);
        map.insert(-2037408248, 656763530);
        map.insert(-611701538, 2022139738);
        map.insert(1576773129, 137146547);
        map.insert(-1965290406, 733548879);
        map.insert(-587210031, -2104162139);
        map.insert(1481766230, 1351981059);
        map.insert(-1154652795, 805813271);
        map.insert(-453678106, 1796827379);
        map.insert(1224208285, -1244697559);
        map.insert(-2003576838, 2021823143);
        map.insert(-529913911, -438164993);
        map.insert(-832937275, 76208893);
        map.insert(-126845436, -866909296);
        map.insert(862334797, 872289374);
        map.insert(1157582676, 913890514);
        map.insert(-1317968655, -230099629);
        map.insert(2143157660, -1003002967);
        map.insert(1174008769, -45472554);
        map.insert(-204403872, -1990127501);
        map.insert(-86960539, -435160877);
        map.insert(-187626253, 320752608);
        map.insert(1281565910, -1442625623);
        map.insert(-103738158, -494082337);
        map.insert(-137293396, 1823399296);
        map.insert(-1918592765, 390382345);
        map.insert(173718599, -302052991);
        map.insert(-1956728175, -1418998110);
        map.insert(-1154042118, -1990424178);
        map.insert(70208229, 1973732993);
        map.insert(-1471372527, -415940818);
        map.insert(53430610, 651875007);
        map.insert(981361735, -2043059048);
        map.insert(-267978591, 1566090491);
        map.insert(-1201496076, 1341891966);
        map.insert(-848554606, -396007441);
        map.insert(-531577394, -1400032326);
        map.insert(577598557, 1267859545);
        map.insert(486113160, 352800915);
        map.insert(-1166942422, -674731505);
        map.insert(-2041844563, -2085310779);
        map.insert(226022706, 414541970);
        map.insert(1902237086, 539102901);
        map.insert(242800325, -1112012100);
        map.insert(-386011928, 589539912);
        map.insert(1607376467, -1597014724);
        map.insert(-689712984, -1277883221);
        map.insert(1925944892, 1745511332);
        map.insert(-672935365, 122403501);
        map.insert(-1451562381, 1542622464);
        map.insert(-430210564, -430713724);
        map.insert(-1081752169, -1270649661);
        map.insert(-747953645, 171980748);
        map.insert(-1098529788, 1358408597);
        map.insert(-112258427, 1272257853);
        map.insert(140165478, 504823315);
        map.insert(-2125122591, -1745523076);
        map.insert(493939829, -355027021);
        map.insert(-2141900210, -1768442878);
        map.insert(-1033385202, 1349398014);
        map.insert(1401336715, -304522885);
        map.insert(157391473, -1482919292);
        map.insert(-1853456626, -994528279);
        map.insert(1892376481, 889011356);
        map.insert(-1174644857, 1816828193);
        map.insert(1899754925, 2109620403);
        map.insert(-790187737, 1586950367);
        map.insert(-55364334, -2081380125);
        map.insert(-800509757, -1185700782);
        map.insert(-1401283028, -1188774954);
        map.insert(-218066089, -2100275822);
        map.insert(-817028279, -1844487312);
        map.insert(1060091695, 2072133518);
        map.insert(-485434250, 789375747);
        map.insert(368412207, 58038063);
        map.insert(701760940, -904268886);
        map.insert(307256062, -1478017893);
        map.insert(-2075859399, 1216434886);
        map.insert(-1806886341, -357398774);
        map.insert(1172946339, -2102223839);
        map.insert(-1952820222, 1978188771);
        map.insert(-852521511, -1526644763);
        map.insert(1358521800, 1427834034);
        map.insert(158588675, 763761550);
        map.insert(-2074599444, -1198670133);
        map.insert(-209014483, 368968432);
        map.insert(-259347340, -1062644945);
        map.insert(-2037857146, -1466695739);
        map.insert(-435027775, -1863796018);
        map.insert(-280405967, 1589347351);
        map.insert(1565413014, 560811306);
        map.insert(-1805699460, -1705137615);
        map.insert(-281391705, -1344102960);
        map.insert(-314108300, 1258759358);
        map.insert(-1990301155, -62383492);
        map.insert(-1639773015, 1844046195);
        map.insert(-1400491751, 333293220);
        map.insert(980973022, 1797522437);
        map.insert(-1435432100, -1136810679);
        map.insert(278949826, -1036428494);
        map.insert(-1280481268, -606847648);
        map.insert(-271903711, -1853949812);
        map.insert(791481790, -222989044);
        map.insert(546903702, 192904472);
        map.insert(-709669824, -1877342310);
        map.insert(-2058324884, 1955625746);
        map.insert(563411175, 101389469);
        map.insert(-1913681574, -2131576173);
        map.insert(2110864211, 1094674564);
        map.insert(1080142473, -1277799466);
        map.insert(-211693756, 15540193);
        map.insert(694342234, 1588099942);
        map.insert(-1887823866, 812611386);
        map.insert(1070176822, 408374927);
        map.insert(-304319129, 1681750315);
        map.insert(-1683838781, 1026540573);
        map.insert(-2093382636, 1140061280);
        map.insert(-969094738, -578729732);
        map.insert(841807591, -1607079827);
        map.insert(-1486655338, 2120377741);
        map.insert(1759370121, 333807435);
        map.insert(497266872, 1344563570);
        map.insert(-318838109, 1582048197);
        map.insert(1114577074, -282170304);
        map.insert(1097799455, -231837447);
        map.insert(-2064582042, -2109601336);
        map.insert(959059560, 24538217);
        map.insert(1107890930, 603906963);
        map.insert(848802264, 418437304);
        map.insert(-2053453370, 875530122);
        map.insert(-1699694465, -1823492319);
        map.insert(183092517, -1350837709);
        map.insert(1326224593, 1472055437);
        map.insert(40689781, 226094310);
        map.insert(705402042, 472143335);
        map.insert(-932127130, -1305855555);
        map.insert(-1334012412, -2126344565);
        map.insert(905517881, -867166067);
        map.insert(1331241167, -222336037);
        map.insert(602417116, -514118785);
        map.insert(-759765322, -534507561);
        map.insert(-287966531, 51874908);
        map.insert(751278535, -1266787716);
        map.insert(-139502861, -1634233604);
        map.insert(-122725242, -1583900747);
        map.insert(-1343050340, 1825811806);
        map.insert(-1690783492, -1477854423);
        map.insert(185517816, -260864652);
        map.insert(400181908, 1241254763);
        map.insert(-130517364, -1310523673);
        map.insert(-80184507, 2143452515);
        map.insert(863897449, -1892522443);
        map.insert(-375948769, 658901258);
        map.insert(-614170189, 1806698795);
        map.insert(1057026748, 676806477);
        map.insert(1073804367, -667588790);
        map.insert(1023471510, -1488507281);
        map.insert(1107359605, 1411524773);
        map.insert(87371004, -1053542412);
        map.insert(583447238, 1592665882);
        map.insert(-456332999, -287939229);
        map.insert(-553311636, -398516443);
        map.insert(-243523922, 548707911);
        map.insert(330268744, 241673361);
        map.insert(1516643825, -620837896);
        map.insert(1146272460, -1628716537);
        map.insert(-2066747393, 2099589164);
        map.insert(1993130336, 1796295089);
        map.insert(883607282, 1959811945);
        map.insert(-994689315, -456549250);
        map.insert(-458174252, 80703303);
        map.insert(642608494, -716495061);
        map.insert(1745178531, 24811116);
        map.insert(-681618322, -1512559524);
        map.insert(52615856, 1856783591);
        map.insert(1303861755, -504693325);
        map.insert(1287084136, -248076681);
        map.insert(1337416993, 1622182973);
        map.insert(153281570, -592321149);
        map.insert(-1290477339, -423142073);
        map.insert(-1307254958, 14093179);
        map.insert(-1324032577, 233789033);
        map.insert(102948713, 2058689260);
        map.insert(742590194, 1268730766);
        map.insert(759367813, 593157434);
        map.insert(709034956, -1919206536);
        map.insert(170059189, 1501349413);
        map.insert(-671977242, -1869056139);
        map.insert(-655199623, 1723498109);
        map.insert(-705532480, -2086101569);
        map.insert(69393475, 2117271668);
        map.insert(1932704444, -1888005530);
        map.insert(1949482063, 1608785026);
        map.insert(1966259682, -979436480);
        map.insert(1991286752, -1939887438);
        map.insert(2021363266, -1649229993);
        map.insert(-682095170, -1988260054);
        map.insert(-2137487096, 286654908);
        map.insert(18812195, 782154013);
        map.insert(878256835, 1393738129);
        map.insert(895034454, 1343405272);
        map.insert(911812073, 1360182891);
        map.insert(-688826522, 1811251412);
        map.insert(216452587, 2105079841);
        map.insert(233230206, 2054746984);
        map.insert(250007825, 2071524603);
        map.insert(266785444, -2139554598);
        map.insert(283563063, -2122776979);
        map.insert(300340682, 2121857460);
        map.insert(-1260505415, 6680851);
        map.insert(850300913, 623494092);
        map.insert(833523294, 1244301689);
        map.insert(799968056, 2004956933);
        map.insert(1560232727, -916209979);
        map.insert(-413558331, 1188929311);
        map.insert(1908142967, -1808626591);
        map.insert(715121622, -1994522136);
        map.insert(1272425901, 1223823795);
        map.insert(1222093044, 1240601414);
        map.insert(1238870663, 1257379033);
        map.insert(1520385604, -884634490);
        map.insert(1794851262, 760097100);
        map.insert(-489843050, -1088900628);
        map.insert(134620654, 914695612);
        map.insert(1727279361, -1543613601);
        map.insert(-1531062819, -1812350413);
        map.insert(-1581395676, -1795572794);
        map.insert(-1310112650, 537586820);
        map.insert(-63549978, 1940616802);
        map.insert(637239835, 1950919896);
        map.insert(1270941912, -1593146607);
        map.insert(-1476669278, -104846425);
        map.insert(1296660531, 37344055);
        map.insert(1321274769, -1970535311);
        map.insert(1674374796, -1910862068);
        map.insert(1044369715, 51802137);
        map.insert(1148667748, -1876550146);
        map.insert(-1123556075, -875897953);
        map.insert(-1173888932, -116700523);
        map.insert(1061147334, 1157945219);
        map.insert(1057978788, -248004880);
        map.insert(538304911, 1437940812);
        map.insert(-155211019, 1615892223);
        map.insert(-1204172777, 662082465);
        map.insert(-1415059053, 672724995);
        map.insert(1727061684, 691571478);
        map.insert(2077964311, -2115127911);
        map.insert(-1599526777, 1757161528);
        map.insert(1569718189, -581782413);
        map.insert(-769708850, -1069212639);
        map.insert(1012914743, -1801562034);
        map.insert(-1630754290, -1506294940);
        map.insert(-798482481, -210971633);
        map.insert(1776884912, 1187537462);
        map.insert(1913726824, 470138850);
        map.insert(1378769140, 1638751609);
        map.insert(-554277026, 385901056);
        map.insert(-792547263, 912247923);
        map.insert(47275219, 515642340);
        map.insert(625794314, 845717332);
        map.insert(932164427, 1250450319);
        map.insert(948942046, -564513464);
        map.insert(-148163169, -408513885);
        map.insert(-164940788, 2059137836);
        map.insert(156880079, 220871484);
        map.insert(140102460, -295661983);
        map.insert(2082244918, 1398601871);
        map.insert(173657698, -1800007622);
        map.insert(-131385550, 2053189737);
        map.insert(-1393657855, 170888934);
        map.insert(-286337438, -289031989);
        map.insert(-370225533, 1344285533);
        map.insert(-387003152, 86808445);
        map.insert(-353447914, 269494260);
        map.insert(-269559819, -898870119);
        map.insert(1869993547, 2086817125);
        map.insert(-1059857426, 1575281566);
        map.insert(1043457811, 1919693123);
        map.insert(793258837, -1939164602);
        map.insert(726393310, -1237842925);
        map.insert(-939952324, 926505363);
        map.insert(39083218, -1737183401);
        map.insert(1605747123, -978171135);
        map.insert(999934475, -1605124253);
        map.insert(1692725416, -99843703);
        map.insert(40078001, 1075562113);
        map.insert(165178998, -638714302);
        map.insert(1316954978, -8248787);
        map.insert(2135569592, -197924652);
        map.insert(427562107, -773064923);
        map.insert(-863415037, -435850030);
        map.insert(-444185186, -1277484559);
        map.insert(1467965949, -2115411093);
        map.insert(754552538, 936452968);
        map.insert(-513366507, -1178895547);
        map.insert(847322071, -905892488);
        map.insert(-1479002813, 2096962869);
        map.insert(-1445447575, -659329626);
        map.insert(-1395114718, -1828437537);
        map.insert(-1428669956, -1824897694);
        map.insert(-1411892337, 1370620670);
        map.insert(-1462225194, -2064934662);
        map.insert(419451940, 649758639);
        map.insert(96086978, 1826479905);
        map.insert(474921613, 1094959825);
        map.insert(1457226786, 1516798828);
        map.insert(1571053395, 1496854684);
        map.insert(550273598, 1269791961);
        map.insert(981853136, -38704817);
        map.insert(2056325840, 617028448);
        map.insert(1236918575, -1534873118);
        map.insert(535849816, -480111181);
        map.insert(1093841990, -10792498);
        map.insert(783660389, -947719149);
        map.insert(942378620, 1304511750);
        map.insert(-1379062523, 1478195406);
        map.insert(1077064371, -162769713);
        map.insert(-1496505856, 1935354277);
        map.insert(917879443, -1275642174);
        map.insert(-28810868, 1238768572);
        map.insert(276942069, -1847423486);
        map.insert(1049579377, -1018476507);
        map.insert(62110480, -1751674977);
        map.insert(-1015096185, -759322097);
        map.insert(-42215247, -304344646);
        map.insert(1815475006, 433136267);
        map.insert(-503435967, -1674197999);
        map.insert(228543096, 1616170558);
        map.insert(1984322081, -1406016738);
        map.insert(-104228676, -328987441);
        map.insert(-171339152, -1061662636);
        map.insert(-53895819, -205129248);
        map.insert(-154561533, -1370787542);
        map.insert(-1335725443, 1816368607);
        map.insert(-1386058300, -1595897508);
        map.insert(-70673438, -1867755128);
        map.insert(-121006295, 933428714);
        map.insert(-1544115670, -1557227429);
        map.insert(13510587, 419544133);
        map.insert(97398682, 1675052919);
        map.insert(-534949843, -234170969);
        map.insert(-2078991444, 1150784263);
        map.insert(1501593646, 484704172);
        map.insert(-2028658587, -185351871);
        map.insert(63843444, -1064586185);
        map.insert(-527160284, 1981896529);
        map.insert(-1988320981, -975766218);
        map.insert(-323411402, -547717357);
        map.insert(114176301, -1731459239);
        map.insert(1348903202, -991785632);
        map.insert(-633530960, -1226039221);
        map.insert(-586728430, 1245658364);
        map.insert(-767279638, -1835901954);
        map.insert(-88850592, 872670820);
        map.insert(1120232956, 698571423);
        map.insert(-1528822541, 1356344465);
        map.insert(1515476160, -850074650);
        map.insert(996196254, 610482952);
        map.insert(-1218449454, -1604162756);
        map.insert(-622613463, -1022276760);
        map.insert(-1408881309, -1216364815);
        map.insert(368415360, -1956312930);
        map.insert(-618411782, -693075425);
        map.insert(-168121422, 1023463766);
        map.insert(1545497909, -1174169377);
        map.insert(548653731, -2078371787);
        map.insert(-103878248, 703199986);
        map.insert(1164783037, 482780573);
        map.insert(-965441646, -123075667);
        map.insert(1349922056, -579527112);
        map.insert(-467385684, 840402477);
        map.insert(-2084709799, 1903829007);
        map.insert(1769557047, 1018916367);
        map.insert(1390411059, 651470142);
        map.insert(1627547621, -1628751678);
        map.insert(-1799490276, -1515031434);
        map.insert(-285638864, 1109228954);
        map.insert(396292942, 430401293);
        map.insert(-607005246, -1450058230);
        map.insert(1819593638, -723474560);
        map.insert(1516131873, -2036325523);
        map.insert(656825598, -1984484433);
        map.insert(480843337, 533293606);
        map.insert(317322897, 1371001947);
        map.insert(-327878852, 46996718);
        map.insert(-308948240, 1474397698);
        map.insert(-1584263064, -55786330);
        map.insert(-1525811188, 421520484);
        map.insert(1627288199, -312328034);
        map.insert(-458054562, 1912978374);
        map.insert(1516745668, -1230287719);
        map.insert(1877375771, -1602374225);
        map.insert(-2103877240, 2059266845);
        map.insert(-2036766764, 521911872);
        map.insert(-2070322002, 343042661);
        map.insert(-2019989145, -1368719946);
        map.insert(-2053544383, 767108599);
        map.insert(-1705702885, 2090694567);
        map.insert(906493988, -526145235);
        map.insert(-833117452, 1365733797);
        map.insert(-2110480457, 1074862246);
        map.insert(1916975462, 1187374991);
        map.insert(-224125069, 1826107924);
        map.insert(-520048118, -777864242);
        map.insert(1214737838, 539975485);
        map.insert(914491752, 591149617);
        map.insert(-1035051305, -1295373411);
        map.insert(-309146858, -1989021920);
        map.insert(536145838, -1377409745);
        map.insert(-1090440898, 1937741205);
        map.insert(-1073663279, 590629922);
        map.insert(-1474984951, -584695776);
        map.insert(-1692474990, -231334097);
        map
    })
}

pub fn get_tag_id_by_name(value: &str) -> i32 {
    // This should not fail since it's applied to bindata contents
    let utf16 = U16CString::from_str(value).unwrap();
    let tag = ue_gas_fnv_hash(utf16.as_slice()) as i32;
    get_tag_ugly_map().get(&tag).copied().unwrap_or(tag)
}